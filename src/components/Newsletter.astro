---
const { title = "Join the mailing list" } = Astro.props;
---

<section id="subscribe" class="px-6 py-16 max-w-xl mx-auto reveal">
  <h2 class="text-4xl mb-4 text-center font-bold">{title}</h2>
  <p class="mb-6 text-sm opacity-80 text-center">New music, show dates, and occasional notes. No spam.</p>

  <form id="mc-form" class="space-y-4" novalidate>
    <input type="text" name="company" class="hidden" tabindex="-1" autocomplete="off" />

    <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
      <div>
        <label for="fname" class="block text-sm mb-1 text-gray-700">First name (optional)</label>
        <input id="fname" name="firstName" type="text" class="w-full rounded border border-gray-300 px-3 py-2 focus:border-[#8B0000] focus:outline-none focus:ring-1 focus:ring-[#8B0000]" autocomplete="given-name" />
      </div>
      <div class="sm:col-span-2">
        <label for="email" class="block text-sm mb-1 text-gray-700">Email</label>
        <input id="email" name="email" type="email" required class="w-full rounded border border-gray-300 px-3 py-2 focus:border-[#8B0000] focus:outline-none focus:ring-1 focus:ring-[#8B0000]" autocomplete="email" />
      </div>
    </div>

    <button type="submit" class="btn bg-[#8B0000] text-white font-medium px-6 py-3 rounded hover:bg-[#8B0000]/90 transition-colors w-full">
      Subscribe
    </button>

    <p id="mc-status" class="text-sm mt-3 text-center" role="status" aria-live="polite"></p>
  </form>

  <script is:inline>
    const form = document.getElementById('mc-form');
    const statusEl = document.getElementById('mc-status');
    form?.addEventListener('submit', async (e) => {
      e.preventDefault();
      statusEl.textContent = "Submittingâ€¦";
      const fd = new FormData(form);
      if (fd.get('company')) { statusEl.textContent = "Thanks!"; return; }
      const payload = {
        firstName: fd.get('firstName')?.toString().trim() || "",
        email: fd.get('email')?.toString().trim() || "",
      };
      try {
        const res = await fetch('/api/subscribe', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(payload),
        });
        const data = await res.json();
        statusEl.textContent = data.message || (data.ok ? "Success." : "Error.");
        if (data.ok) form.reset();
      } catch {
        statusEl.textContent = "Couldn't submit right now.";
      }
    });
  </script>
</section>
